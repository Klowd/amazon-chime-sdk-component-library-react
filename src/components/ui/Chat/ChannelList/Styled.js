// Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import { baseSpacing, baseStyles } from '../../Base';
import styled from 'styled-components';
export var StyledChannelList = styled.ul(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  flex-direction: column;\n  width: 20rem;\n\n  ", "\n  ", "\n"], ["\n  display: flex;\n  flex-direction: column;\n  width: 20rem;\n\n  ", "\n  ", "\n"])), baseStyles, baseSpacing);
export var StyledChannelItem = styled.li(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  position: relative;\n\n  ", ";\n  ", ";\n\n  & .ch-channel-button {\n    width: 100%;\n    height: 100%;\n    padding: 11px 0;\n    background-color: ", ";\n    border: none;\n    border-radius: unset;\n    justify-content: left;\n    padding-left: 1rem;\n    color: ", ";\n    border: ", ";\n    font-family: ", ";\n\n    &:hover {\n      background-color: ", ";\n    }\n\n    &:active {\n      background-color: ", ";\n      color: ", ";\n    }\n\n    &:focus {\n      border: ", ";\n    }\n  }\n\n  & .ch-label {\n    padding-left: 1.5rem;\n  }\n\n  & .ch-unread-badge {\n    display: ", ";\n    position: absolute;\n    z-index: 2;\n    top: 12px;\n    left: 5px;\n    background-color: ", ";\n  }\n\n  &.ch-unread .ch-channel-button {\n    font-weight: bold;\n  }\n\n  &.ch-selected .ch-channel-button {\n    background-color: ", ";\n    color: ", ";\n\n    &:focus {\n      border: ", ";\n    }\n  }\n\n  & .ch-popover-toggle {\n    position: absolute;\n    right: 1rem;\n    margin: 0.5rem 0;\n    height: 1.5rem;\n    border-radius: 50%;\n\n    .ch-channel-actions {\n      border: 1px solid transparent;\n    }\n\n    & g {\n      fill: ", ";\n    }\n\n    & button:focus .ch-channel-actions {\n      border: ", ";\n      border-radius: 50%;\n    }\n\n    &:hover,\n    &:active {\n      background-color: ", ";\n\n      & g {\n        fill: ", ";\n      }\n    }\n  }\n"], ["\n  position: relative;\n\n  ", ";\n  ", ";\n\n  & .ch-channel-button {\n    width: 100%;\n    height: 100%;\n    padding: 11px 0;\n    background-color: ", ";\n    border: none;\n    border-radius: unset;\n    justify-content: left;\n    padding-left: 1rem;\n    color: ", ";\n    border: ", ";\n    font-family: ", ";\n\n    &:hover {\n      background-color: ", ";\n    }\n\n    &:active {\n      background-color: ", ";\n      color: ", ";\n    }\n\n    &:focus {\n      border: ", ";\n    }\n  }\n\n  & .ch-label {\n    padding-left: 1.5rem;\n  }\n\n  & .ch-unread-badge {\n    display: ", ";\n    position: absolute;\n    z-index: 2;\n    top: 12px;\n    left: 5px;\n    background-color: ", ";\n  }\n\n  &.ch-unread .ch-channel-button {\n    font-weight: bold;\n  }\n\n  &.ch-selected .ch-channel-button {\n    background-color: ", ";\n    color: ", ";\n\n    &:focus {\n      border: ", ";\n    }\n  }\n\n  & .ch-popover-toggle {\n    position: absolute;\n    right: 1rem;\n    margin: 0.5rem 0;\n    height: 1.5rem;\n    border-radius: 50%;\n\n    .ch-channel-actions {\n      border: 1px solid transparent;\n    }\n\n    & g {\n      fill: ", ";\n    }\n\n    & button:focus .ch-channel-actions {\n      border: ", ";\n      border-radius: 50%;\n    }\n\n    &:hover,\n    &:active {\n      background-color: ",
    ";\n\n      & g {\n        fill: ", ";\n      }\n    }\n  }\n"])), baseStyles, baseSpacing, function (props) { return props.theme.channelList.bgd; }, function (props) { return props.theme.channelList.fontColor; }, function (props) { return props.theme.channelList.border; }, function (props) { return props.theme.fonts.body; }, function (props) { return props.theme.channelList.hover.bgd; }, function (props) { return props.theme.channelList.active.bgd; }, function (props) { return props.theme.channelList.active.fontColor; }, function (props) { return props.theme.channelList.focus.border; }, function (props) { return (props.unread ? 'inline' : 'none'); }, function (props) { return props.theme.colors.primary.light; }, function (props) { return props.theme.colors.primary.light; }, function (props) { return props.theme.channelList.selected.fontColor; }, function (props) { return props.theme.channelList.focus.selectedBorder; }, function (props) { return props.theme.channelList.active.fontColor; }, function (props) { return props.theme.channelList.focus.selectedBorder; }, function (props) {
    return props.theme.channelList.iconButton.activeBgd;
}, function (props) { return props.theme.colors.primary.light; });
export default StyledChannelList;
var templateObject_1, templateObject_2;
//# sourceMappingURL=Styled.js.map